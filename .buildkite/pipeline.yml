agents:
  queue: central
  slurm_mem: 8G
  modules: julia/1.8.5 ucx/1.13.1_cuda-11.2 cuda/11.2 openmpi/4.1.5_cuda-11.2 hdf5/1.14.0-ompi415 nsight-systems/2022.2.1

env:
  JULIA_LOAD_PATH: "${JULIA_LOAD_PATH}:${BUILDKITE_BUILD_CHECKOUT_PATH}/.buildkite"
  JULIA_CUDA_USE_BINARYBUILDER: false
  JULIA_CUDA_MEMORY_POOL: none
  OPENBLAS_NUM_THREADS: 1
  JULIA_NVTX_CALLBACKS: gc

steps:
  - label: "initialize"
    key: "initialize"
    command:
      - echo "--- Instantiate project"
      - "julia --project -e 'using Pkg; Pkg.instantiate(;verbose=true); Pkg.precompile(;strict=true)'"
      # force the initialization of the CUDA runtime as it is lazily loaded by default
      - "julia --project -e 'using CUDA; CUDA.precompile_runtime()'"
      - "julia --project -e 'using Pkg; Pkg.status()'"

      - echo "--- Instantiate perf"
      - "julia --project=perf -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project=perf -e 'using Pkg; Pkg.precompile()'"
      - "julia --project=perf -e 'using Pkg; Pkg.status()'"

    agents:
      slurm_cpus_per_task: 8
    env:
      JULIA_NUM_PRECOMPILE_TASKS: 8

  - wait

  - group: "Run"
    steps:

      - label: ":computer: steady state"
        key: "cpu_steadystate"
        command:
          - >
            nsys profile --trace=nvtx --output=output/cpu_steadystate/report
            ./shallowwater --output-dir=output/cpu_steadystate
          - ./create-movie --output-dir=output/cpu_steadystate --filename=output/cpu_steadystate/out.mp4
        artifact_paths:
          - output/cpu_steadystate/report.*
          - output/cpu_steadystate/out.mp4

      - label: ":computer: :mpi: steady state"
        key: "cpu_mpi_steadystate"
        command:
          - >
            srun --cpu-bind=cores
            nsys profile --trace=nvtx,mpi  --mpi-impl=openmpi --output=output/cpu_mpi_steadystate/report-%q{PMI_RANK} 
            ./shallowwater --output-dir=output/cpu_mpi_steadystate
          - nsys-mkview output/cpu_mpi_steadystate
          - nsys-archive output/cpu_mpi_steadystate
          - ./create-movie --output-dir=output/cpu_mpi_steadystate --filename=output/cpu_mpi_steadystate/out.mp4
        artifact_paths:
          - output/cpu_mpi_steadystate/out.mp4
        agents:
          slurm_ntasks: 4
          slurm_cpus_per_task: 2

      - label: ":flower_playing_cards: steady state"
        key: "gpu_steadystate"
        command:
          - >
            nsys profile --trace=nvtx,cuda --output=output/gpu_steadystate/report
            ./shallowwater --output-dir=output/gpu_steadystate
          - ./create-movie --output-dir=output/gpu_steadystate --filename=output/gpu_steadystate/out.mp4
        artifact_paths:
          - output/gpu_steadystate/report.*
          - output/gpu_steadystate/out.mp4
        agents:
          slurm_gpus: 1

      - label: ":flower_playing_cards: :mpi: steady state"
        key: "gpu_mpi_steadystate"
        command:
          - >
            srun --cpu-bind=cores --gpu-bind=per_task:1
            nsys profile --trace=nvtx,cuda,mpi --mpi-impl=openmpi --output=output/gpu_mpi_steadystate/report-%q{PMI_RANK} 
            ./shallowwater --output-dir=output/gpu_mpi_steadystate
          - nsys-mkview output/gpu_mpi_steadystate
          - nsys-archive output/gpu_mpi_steadystate
          - ./create-movie --output-dir=output/gpu_mpi_steadystate --filename=output/gpu_mpi_steadystate/out.mp4
        artifact_paths:
          - output/gpu_mpi_steadystate/nsys.tar.gz
          - output/gpu_mpi_steadystate/out.mp4
        agents:
          slurm_ntasks: 4
          slurm_gpus_per_task: 1
          slurm_cpus_per_task: 2

      - label: ":flower_playing_cards: Mountain"
        key: "gpu_mountain"
        command:
          - ./shallowwater Mountain --output-dir=output/gpu_mountain --time-end=172800
          - ./create-movie --output-dir=output/gpu_mountain --filename=output/gpu_mountain/out.mp4
        artifact_paths:
          - output/gpu_mountain/out.mp4
        agents:
          slurm_gpus: 1

      - label: ":flower_playing_cards: Rossby-Haurwitz"
        key: "gpu_rossbyhaurwitz_res"
        command:
          - ": > print-out-0.log && tail -F print-out-0.log &" # print log in background
          - >
            srun --cpu-bind=cores --gpu-bind=per_task:1 --output=print-out-%t.log
            julia --check-bounds=yes --project -g 2
            shallowwater RossbyHaurwitz --output-dir=output/gpu_rossbyhaurwitz_res --panel-size=32 --time-step=600 --time-end=172800
          - sleep 1 # give time for log to print
          - ./create-movie --output-dir=output/gpu_rossbyhaurwitz_res --filename=output/gpu_rossbyhaurwitz_res/out.mp4
        artifact_paths:
          - output/gpu_rossbyhaurwitz_res/out.mp4
          - print-out-*
        agents:
          slurm_ntasks: 4
          slurm_gpus_per_task: 1

      - label: ":flower_playing_cards: barotropic instability"
        key: "gpu_barotropicinstability"
        command:
          - ./shallowwater BarotropicInstability --time-end=1728000 --output-nsteps=20 --output-dir=output/gpu_barotropicinstability
          - ./create-movie --output-dir=output/gpu_barotropicinstability --filename=output/gpu_barotropicinstability/out.mp4
        artifact_paths:
          - output/gpu_barotropicinstability/out.mp4
        agents:
          slurm_gpus: 1

      - label: ":rocket::computer: Flamegraph profile"
        key: "cpu_flamegraph"
        command:
          - "julia --color=yes --project=perf perf/flame.jl"
        artifact_paths:
          - "perf/output/*"

      - label: ":rocket::computer: Benchmark"
        command: "julia --color=yes --project=perf perf/benchmark.jl"
